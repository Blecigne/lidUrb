# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: ["*"]
    tags: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Test with pytest
        run: |
          pip install -r requirements-dev.txt
          pytest

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python_version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Test with pytest
        run: |
          pip install -r requirements-dev.txt
          pytest
      - name: Build and publish
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python setup.py bdist_wheel
          twine upload dist/*
  sdist:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install -r requirements-dev.txt
          python setup.py sdist
          twine upload dist/*
